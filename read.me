Commands executed to generate this project
> npm install -g @angular/cli
> ng new [NAME OF YOUR PROJECT]
 - "No" to Add Angular routing
 - "SCSS" to Stylesheet format
> ng serve

Steps to implement a New Component
 - Create a new folder
  -=- Create a .TS File (nova-transferencia.component.ts) with class
  -=- Create a HTML (nova-transferencia.component.html) File
  -=- Create a SCSS (nova-transferencia.component.scss) File
  -=- Add the Class created at .TS file into the "app.module.ts", specifically into "declarations" array

Steps to use the new Component
 - Add the new <TAG> created, as especified in "selector" at .TS file, in the "app.component.html" file
 - To verify its funcionality, access the "http://localhost:4200" URL and inspect the page content.
  -=- Inside the <app-root> tag, it should appear the new tag created.

How ro override the Submit event in the forma
 - In the "app.module.ts", import the FormsModule (@angular/forms) at "imports".
 - In .TS File, add a new Method (transferir()) that will be invoked at Submit Event from Form
 - At <form> tag, add the "(ngSubmit)=" Attribute/"Event Binding" invoking the Method created before

Types of Binding
 ([ngModel])  = Two Way Data Binding - Data is transfered from Template to Component and vice versa
  - https://angular.io/guide/property-binding

 [ngModel]    = Property Binding - Data is transfered from Component to Template only,
  - https://angular.io/guide/property-binding

 (ngModel)    = Event Binding - Binds and Event from DOM/Template to a Method at a Angular/TypeScript Component
  - https://angular.io/guide/event-binding

How to Output data from Component to Template
 - In .TS class, add a new Attribute annotated with @Output and receiving a new Object of EventEmitter (typed with "any" for now)
 - Invoke the new Attribute with .emit receiving as parameter the Object(s) that we want to export as an Output
 - In the Class AppComponent in "app.component.ts" add a Method that is going to receive the Output Data
 - In the "app.component.html" add an Event Binding with the @Output attribute created in .TS class, receiving in an attribuition the Method created in AppComponent

Creating a new Component automatically
 - With the following command, the Angular will create a new Folder with 4 files (.TS, .HTML, .SCSS and a .SPEC.TS for Testing):
 > ng generate component <NAME OF THE NEW COMPONENT>

 Connecting the new Extrato component with App component
  - App Component has the TransferenciaAppComponent object
  - Extrato Component has to have an @Input() transferenciaExtrato attribute to receive the previous object.
  - Extrato Template gets the transferenciaExtrato object to get it's attributes
  - App Template receives the <app-extrato> tag, and we put a Property Binding to transferenciaAppComponent on it



References:
 - https://github.com/alura-cursos/1952-angular/tree/aula-1
 - https://github.com/alura-cursos/1952-angular/tree/aula-2
 - https://github.com/alura-cursos/1952-angular/tree/aula-3


